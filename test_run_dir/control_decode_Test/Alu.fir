;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Alu : 
  module Alu : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip AluControl : UInt<5>, flip in1 : SInt<32>, flip in2 : SInt<32>, Branch : UInt<1>, out : SInt<32>}
    
    node _T = eq(io.AluControl, UInt<1>("h00")) @[ALU.scala 81:29]
    when _T : @[ALU.scala 81:44]
      node _io_out_T = add(io.in1, io.in2) @[ALU.scala 81:62]
      node _io_out_T_1 = tail(_io_out_T, 1) @[ALU.scala 81:62]
      node _io_out_T_2 = asSInt(_io_out_T_1) @[ALU.scala 81:62]
      io.out <= _io_out_T_2 @[ALU.scala 81:52]
      skip @[ALU.scala 81:44]
    else : @[ALU.scala 83:49]
      node _T_1 = eq(io.AluControl, UInt<1>("h01")) @[ALU.scala 83:34]
      when _T_1 : @[ALU.scala 83:49]
        node _io_out_T_3 = bits(io.in2, 4, 0) @[ALU.scala 83:76]
        node _io_out_T_4 = dshl(io.in1, _io_out_T_3) @[ALU.scala 83:67]
        io.out <= _io_out_T_4 @[ALU.scala 83:57]
        skip @[ALU.scala 83:49]
      else : @[ALU.scala 85:49]
        node _T_2 = eq(io.AluControl, UInt<3>("h04")) @[ALU.scala 85:34]
        when _T_2 : @[ALU.scala 85:49]
          node _io_out_T_5 = xor(io.in1, io.in2) @[ALU.scala 85:67]
          node _io_out_T_6 = asSInt(_io_out_T_5) @[ALU.scala 85:67]
          io.out <= _io_out_T_6 @[ALU.scala 85:57]
          skip @[ALU.scala 85:49]
        else : @[ALU.scala 87:81]
          node _T_3 = eq(io.AluControl, UInt<3>("h05")) @[ALU.scala 87:34]
          node _T_4 = eq(io.AluControl, UInt<4>("h0d")) @[ALU.scala 87:66]
          node _T_5 = or(_T_3, _T_4) @[ALU.scala 87:49]
          when _T_5 : @[ALU.scala 87:81]
            node _io_out_T_7 = bits(io.in2, 4, 0) @[ALU.scala 87:108]
            node _io_out_T_8 = dshr(io.in1, _io_out_T_7) @[ALU.scala 87:99]
            io.out <= _io_out_T_8 @[ALU.scala 87:89]
            skip @[ALU.scala 87:81]
          else : @[ALU.scala 89:49]
            node _T_6 = eq(io.AluControl, UInt<3>("h06")) @[ALU.scala 89:34]
            when _T_6 : @[ALU.scala 89:49]
              node _io_out_T_9 = or(io.in1, io.in2) @[ALU.scala 89:67]
              node _io_out_T_10 = asSInt(_io_out_T_9) @[ALU.scala 89:67]
              io.out <= _io_out_T_10 @[ALU.scala 89:57]
              skip @[ALU.scala 89:49]
            else : @[ALU.scala 91:49]
              node _T_7 = eq(io.AluControl, UInt<3>("h07")) @[ALU.scala 91:34]
              when _T_7 : @[ALU.scala 91:49]
                node _io_out_T_11 = and(io.in1, io.in2) @[ALU.scala 91:67]
                node _io_out_T_12 = asSInt(_io_out_T_11) @[ALU.scala 91:67]
                io.out <= _io_out_T_12 @[ALU.scala 91:57]
                skip @[ALU.scala 91:49]
              else : @[ALU.scala 93:49]
                node _T_8 = eq(io.AluControl, UInt<4>("h08")) @[ALU.scala 93:34]
                when _T_8 : @[ALU.scala 93:49]
                  node _io_out_T_13 = sub(io.in1, io.in2) @[ALU.scala 93:67]
                  node _io_out_T_14 = tail(_io_out_T_13, 1) @[ALU.scala 93:67]
                  node _io_out_T_15 = asSInt(_io_out_T_14) @[ALU.scala 93:67]
                  io.out <= _io_out_T_15 @[ALU.scala 93:57]
                  skip @[ALU.scala 93:49]
                else : @[ALU.scala 95:49]
                  node _T_9 = eq(io.AluControl, UInt<5>("h01f")) @[ALU.scala 95:34]
                  when _T_9 : @[ALU.scala 95:49]
                    io.out <= io.in1 @[ALU.scala 95:57]
                    skip @[ALU.scala 95:49]
                  else : @[ALU.scala 97:49]
                    node _T_10 = eq(io.AluControl, UInt<5>("h015")) @[ALU.scala 97:34]
                    when _T_10 : @[ALU.scala 97:49]
                      node _T_11 = geq(io.in1, io.in2) @[ALU.scala 98:30]
                      when _T_11 : @[ALU.scala 98:40]
                        io.out <= asSInt(UInt<2>("h01")) @[ALU.scala 98:48]
                        skip @[ALU.scala 98:40]
                      else : @[ALU.scala 99:28]
                        io.out <= asSInt(UInt<1>("h00")) @[ALU.scala 99:36]
                        skip @[ALU.scala 99:28]
                      skip @[ALU.scala 97:49]
                    else : @[ALU.scala 101:49]
                      node _T_12 = eq(io.AluControl, UInt<5>("h017")) @[ALU.scala 101:34]
                      when _T_12 : @[ALU.scala 101:49]
                        node _T_13 = asUInt(io.in1) @[ALU.scala 102:30]
                        node _T_14 = asUInt(io.in2) @[ALU.scala 102:47]
                        node _T_15 = geq(_T_13, _T_14) @[ALU.scala 102:37]
                        when _T_15 : @[ALU.scala 102:54]
                          io.out <= asSInt(UInt<2>("h01")) @[ALU.scala 102:62]
                          skip @[ALU.scala 102:54]
                        else : @[ALU.scala 103:28]
                          io.out <= asSInt(UInt<1>("h00")) @[ALU.scala 103:36]
                          skip @[ALU.scala 103:28]
                        skip @[ALU.scala 101:49]
                      else : @[ALU.scala 105:81]
                        node _T_16 = eq(io.AluControl, UInt<2>("h03")) @[ALU.scala 105:34]
                        node _T_17 = eq(io.AluControl, UInt<5>("h016")) @[ALU.scala 105:66]
                        node _T_18 = or(_T_16, _T_17) @[ALU.scala 105:49]
                        when _T_18 : @[ALU.scala 105:81]
                          node _T_19 = asUInt(io.in1) @[ALU.scala 106:30]
                          node _T_20 = asUInt(io.in2) @[ALU.scala 106:46]
                          node _T_21 = lt(_T_19, _T_20) @[ALU.scala 106:37]
                          when _T_21 : @[ALU.scala 106:53]
                            io.out <= asSInt(UInt<2>("h01")) @[ALU.scala 106:61]
                            skip @[ALU.scala 106:53]
                          else : @[ALU.scala 107:28]
                            io.out <= asSInt(UInt<1>("h00")) @[ALU.scala 107:36]
                            skip @[ALU.scala 107:28]
                          skip @[ALU.scala 105:81]
                        else : @[ALU.scala 109:49]
                          node _T_22 = eq(io.AluControl, UInt<5>("h010")) @[ALU.scala 109:34]
                          when _T_22 : @[ALU.scala 109:49]
                            node _T_23 = eq(io.in1, io.in2) @[ALU.scala 110:30]
                            when _T_23 : @[ALU.scala 110:41]
                              io.out <= asSInt(UInt<2>("h01")) @[ALU.scala 110:49]
                              skip @[ALU.scala 110:41]
                            else : @[ALU.scala 111:28]
                              io.out <= asSInt(UInt<1>("h00")) @[ALU.scala 111:36]
                              skip @[ALU.scala 111:28]
                            skip @[ALU.scala 109:49]
                          else : @[ALU.scala 113:81]
                            node _T_24 = eq(io.AluControl, UInt<2>("h02")) @[ALU.scala 113:34]
                            node _T_25 = eq(io.AluControl, UInt<5>("h014")) @[ALU.scala 113:66]
                            node _T_26 = or(_T_24, _T_25) @[ALU.scala 113:49]
                            when _T_26 : @[ALU.scala 113:81]
                              node _T_27 = lt(io.in1, io.in2) @[ALU.scala 114:30]
                              when _T_27 : @[ALU.scala 114:39]
                                io.out <= asSInt(UInt<2>("h01")) @[ALU.scala 114:47]
                                skip @[ALU.scala 114:39]
                              else : @[ALU.scala 115:28]
                                io.out <= asSInt(UInt<1>("h00")) @[ALU.scala 115:36]
                                skip @[ALU.scala 115:28]
                              skip @[ALU.scala 113:81]
                            else : @[ALU.scala 117:49]
                              node _T_28 = eq(io.AluControl, UInt<5>("h011")) @[ALU.scala 117:34]
                              when _T_28 : @[ALU.scala 117:49]
                                node _T_29 = neq(io.in1, io.in2) @[ALU.scala 118:30]
                                when _T_29 : @[ALU.scala 118:41]
                                  io.out <= asSInt(UInt<2>("h01")) @[ALU.scala 118:49]
                                  skip @[ALU.scala 118:41]
                                else : @[ALU.scala 119:28]
                                  io.out <= asSInt(UInt<1>("h00")) @[ALU.scala 119:36]
                                  skip @[ALU.scala 119:28]
                                skip @[ALU.scala 117:49]
                              else : @[ALU.scala 120:20]
                                io.out is invalid @[ALU.scala 120:28]
                                skip @[ALU.scala 120:20]
    node _T_30 = eq(io.out, asSInt(UInt<2>("h01"))) @[ALU.scala 123:22]
    node _T_31 = bits(io.AluControl, 4, 3) @[ALU.scala 123:46]
    node _T_32 = eq(_T_31, UInt<2>("h02")) @[ALU.scala 123:52]
    node _T_33 = and(_T_30, _T_32) @[ALU.scala 123:30]
    when _T_33 : @[ALU.scala 123:64]
      io.Branch <= UInt<1>("h01") @[ALU.scala 123:75]
      skip @[ALU.scala 123:64]
    else : @[ALU.scala 124:20]
      io.Branch <= UInt<1>("h00") @[ALU.scala 124:31]
      skip @[ALU.scala 124:20]
    

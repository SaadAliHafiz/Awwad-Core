circuit Alu :
  module Alu :
    input clock : Clock
    input reset : UInt<1>
    input io_AluControl : UInt<5>
    input io_in1 : SInt<32>
    input io_in2 : SInt<32>
    output io_Branch : UInt<1>
    output io_out : SInt<32>

    node _T = eq(io_AluControl, UInt<1>("h0")) @[Alu.scala 20:29]
    node _io_out_T = add(io_in1, io_in2) @[Alu.scala 20:62]
    node _io_out_T_1 = tail(_io_out_T, 1) @[Alu.scala 20:62]
    node _io_out_T_2 = asSInt(_io_out_T_1) @[Alu.scala 20:62]
    node _T_1 = eq(io_AluControl, UInt<1>("h1")) @[Alu.scala 22:34]
    node _io_out_T_3 = bits(io_in2, 4, 0) @[Alu.scala 22:76]
    node _io_out_T_4 = dshl(io_in1, _io_out_T_3) @[Alu.scala 22:67]
    node _T_2 = eq(io_AluControl, UInt<3>("h4")) @[Alu.scala 24:34]
    node _io_out_T_5 = xor(io_in1, io_in2) @[Alu.scala 24:67]
    node _io_out_T_6 = asSInt(_io_out_T_5) @[Alu.scala 24:67]
    node _T_3 = eq(io_AluControl, UInt<3>("h5")) @[Alu.scala 26:34]
    node _T_4 = eq(io_AluControl, UInt<4>("hd")) @[Alu.scala 26:66]
    node _T_5 = or(_T_3, _T_4) @[Alu.scala 26:49]
    node _io_out_T_7 = bits(io_in2, 4, 0) @[Alu.scala 26:108]
    node _io_out_T_8 = dshr(io_in1, _io_out_T_7) @[Alu.scala 26:99]
    node _T_6 = eq(io_AluControl, UInt<3>("h6")) @[Alu.scala 28:34]
    node _io_out_T_9 = or(io_in1, io_in2) @[Alu.scala 28:67]
    node _io_out_T_10 = asSInt(_io_out_T_9) @[Alu.scala 28:67]
    node _T_7 = eq(io_AluControl, UInt<3>("h7")) @[Alu.scala 30:34]
    node _io_out_T_11 = and(io_in1, io_in2) @[Alu.scala 30:67]
    node _io_out_T_12 = asSInt(_io_out_T_11) @[Alu.scala 30:67]
    node _T_8 = eq(io_AluControl, UInt<4>("h8")) @[Alu.scala 32:34]
    node _io_out_T_13 = sub(io_in1, io_in2) @[Alu.scala 32:67]
    node _io_out_T_14 = tail(_io_out_T_13, 1) @[Alu.scala 32:67]
    node _io_out_T_15 = asSInt(_io_out_T_14) @[Alu.scala 32:67]
    node _T_9 = eq(io_AluControl, UInt<5>("h1f")) @[Alu.scala 34:34]
    node _T_10 = eq(io_AluControl, UInt<5>("h15")) @[Alu.scala 36:34]
    node _T_11 = geq(io_in1, io_in2) @[Alu.scala 37:30]
    node _GEN_0 = mux(_T_11, asSInt(UInt<2>("h1")), asSInt(UInt<1>("h0"))) @[Alu.scala 37:40 Alu.scala 37:48 Alu.scala 18:16]
    node _T_12 = eq(io_AluControl, UInt<5>("h17")) @[Alu.scala 40:34]
    node _T_13 = asUInt(io_in1) @[Alu.scala 41:30]
    node _T_14 = asUInt(io_in2) @[Alu.scala 41:47]
    node _T_15 = geq(_T_13, _T_14) @[Alu.scala 41:37]
    node _GEN_1 = mux(_T_15, asSInt(UInt<2>("h1")), asSInt(UInt<1>("h0"))) @[Alu.scala 41:54 Alu.scala 41:62 Alu.scala 42:36]
    node _T_16 = eq(io_AluControl, UInt<2>("h3")) @[Alu.scala 44:34]
    node _T_17 = eq(io_AluControl, UInt<5>("h16")) @[Alu.scala 44:66]
    node _T_18 = or(_T_16, _T_17) @[Alu.scala 44:49]
    node _T_19 = asUInt(io_in1) @[Alu.scala 45:30]
    node _T_20 = asUInt(io_in2) @[Alu.scala 45:46]
    node _T_21 = lt(_T_19, _T_20) @[Alu.scala 45:37]
    node _GEN_2 = mux(_T_21, asSInt(UInt<2>("h1")), asSInt(UInt<1>("h0"))) @[Alu.scala 45:53 Alu.scala 45:61 Alu.scala 46:36]
    node _T_22 = eq(io_AluControl, UInt<5>("h10")) @[Alu.scala 48:34]
    node _T_23 = eq(io_in1, io_in2) @[Alu.scala 49:30]
    node _GEN_3 = mux(_T_23, asSInt(UInt<2>("h1")), asSInt(UInt<1>("h0"))) @[Alu.scala 49:41 Alu.scala 49:49 Alu.scala 50:36]
    node _T_24 = eq(io_AluControl, UInt<2>("h2")) @[Alu.scala 52:34]
    node _T_25 = eq(io_AluControl, UInt<5>("h14")) @[Alu.scala 52:66]
    node _T_26 = or(_T_24, _T_25) @[Alu.scala 52:49]
    node _T_27 = lt(io_in1, io_in2) @[Alu.scala 53:30]
    node _GEN_4 = mux(_T_27, asSInt(UInt<2>("h1")), asSInt(UInt<1>("h0"))) @[Alu.scala 53:39 Alu.scala 53:47 Alu.scala 54:36]
    node _T_28 = eq(io_AluControl, UInt<5>("h11")) @[Alu.scala 56:34]
    node _T_29 = neq(io_in1, io_in2) @[Alu.scala 57:30]
    node _GEN_5 = mux(_T_29, asSInt(UInt<2>("h1")), asSInt(UInt<1>("h0"))) @[Alu.scala 57:41 Alu.scala 57:49 Alu.scala 58:36]
    node _GEN_6 = validif(_T_28, _GEN_5) @[Alu.scala 56:49]
    node _GEN_7 = mux(_T_26, _GEN_4, _GEN_6) @[Alu.scala 52:81]
    node _GEN_8 = mux(_T_22, _GEN_3, _GEN_7) @[Alu.scala 48:49]
    node _GEN_9 = mux(_T_18, _GEN_2, _GEN_8) @[Alu.scala 44:81]
    node _GEN_10 = mux(_T_12, _GEN_1, _GEN_9) @[Alu.scala 40:49]
    node _GEN_11 = mux(_T_10, _GEN_0, _GEN_10) @[Alu.scala 36:49]
    node _GEN_12 = mux(_T_9, io_in1, _GEN_11) @[Alu.scala 34:49 Alu.scala 34:57]
    node _GEN_13 = mux(_T_8, _io_out_T_15, _GEN_12) @[Alu.scala 32:49 Alu.scala 32:57]
    node _GEN_14 = mux(_T_7, _io_out_T_12, _GEN_13) @[Alu.scala 30:49 Alu.scala 30:57]
    node _GEN_15 = mux(_T_6, _io_out_T_10, _GEN_14) @[Alu.scala 28:49 Alu.scala 28:57]
    node _GEN_16 = mux(_T_5, _io_out_T_8, _GEN_15) @[Alu.scala 26:81 Alu.scala 26:89]
    node _GEN_17 = mux(_T_2, _io_out_T_6, _GEN_16) @[Alu.scala 24:49 Alu.scala 24:57]
    node _GEN_18 = mux(_T_1, _io_out_T_4, _GEN_17) @[Alu.scala 22:49 Alu.scala 22:57]
    node _GEN_19 = mux(_T, _io_out_T_2, _GEN_18) @[Alu.scala 20:44 Alu.scala 20:52]
    node _T_30 = eq(io_out, asSInt(UInt<2>("h1"))) @[Alu.scala 63:22]
    node _T_31 = bits(io_AluControl, 4, 3) @[Alu.scala 63:46]
    node _T_32 = eq(_T_31, UInt<2>("h2")) @[Alu.scala 63:52]
    node _T_33 = and(_T_30, _T_32) @[Alu.scala 63:30]
    node _GEN_20 = mux(_T_33, UInt<1>("h1"), UInt<1>("h0")) @[Alu.scala 63:64 Alu.scala 64:27 Alu.scala 68:27]
    io_Branch <= _GEN_20
    io_out <= asSInt(bits(_GEN_19, 31, 0))
